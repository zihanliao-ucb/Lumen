#version 430

layout (local_size_x = 64) in; // match your CPU dispatch granularity

layout (binding = 0, rgba32f) uniform image3D sdfTexture;

layout (binding = 1, rgba32f) uniform image3D normalTexture;

layout(std430, binding = 2) readonly buffer SurfacePoints {
    vec4 points[];
};

layout(std430, binding = 3) readonly buffer SurfaceNormals {
    vec4 normals[];
};

uniform vec3 uBoundingBoxOrigin;
uniform float uVoxelSize;
uniform int uSdfSize;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= points.length()) return;

    vec3 p_world = points[idx].xyz;
    vec3 p_grid = (p_world - uBoundingBoxOrigin) / uVoxelSize;
    ivec3 coord = ivec3(floor(p_grid));

    if (any(lessThan(coord, ivec3(0))) || any(greaterThanEqual(coord, ivec3(uSdfSize))))
        return;

    vec3 p_center = (vec3(coord) + 0.5) * uVoxelSize + uBoundingBoxOrigin;
    float d = length(p_world - p_center);
    imageStore(sdfTexture, coord, vec4(p_world, d));
    imageStore(normalTexture, coord, vec4(normals[idx].xyz, 0.0));
}
